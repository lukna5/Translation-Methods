grammar Calculator;

: e ;

e [int val] -> t ePrime<t0.val> { $res.val = $ePrime1.val; } ;

ePrime <int acc> [int val] ->
      PLUS t { $res.val = acc + $t1.val; } ePrime<res.val> { $res.val = $ePrime2.val; }
    | MINUS t { $res.val = acc - $t1.val; } ePrime<res.val> { $res.val = $ePrime2.val; }
    | eps { $res.val = acc; }
    ;

t [int val] -> m tPrime<m0.val> { $res.val = $tPrime1.val; } ;

tPrime <int acc> [int val] ->
      MUL m { $res.val = acc * $m1.val; } tPrime<res.val> { $res.val = $tPrime2.val; }
    | DIV m { $res.val = acc / $m1.val; } tPrime<res.val> { $res.val = $tPrime2.val; }
    | eps { $res.val = acc; }
    ;

m [int val] ->
      MINUS m { $res.val = -$m1.val; }
    | f { $res.val = $f0.val; }
    ;

f [int val] ->
      DIGIT { $res.val = Integer.parseInt($DIGIT0.text); }
    | OPEN e CLOSE { $res.val = $e1.val; }
    ;


DIV   : "/" ;
MUL   : "*" ;
PLUS  : "+" ;
MINUS : "-" ;
DIGIT : "[0-9]+" ;
OPEN  : "(" ;
CLOSE : ")" ;